---


AWSTemplateFormatVersion: 2010-09-09


Description: 'git LFS: Lambda function'


Metadata:

   AWS::CloudFormation::Interface:
      ParameterLabels:
         GitHubOwner:
            default: Owner
         GitHubRepo:
            default: Repo
         HandlerFunction:
            default: Function
         HandlerModule:
            default: Module
         Policies:
            default: IAM policies
         PythonVersion:
            default: Python version

      ParameterGroups:
         -
            Label: Lambda
            Parameters:
               - PythonVersion
               - Layers
               - Policies
         -
            Label: glawit
            Parameters:
               - HandlerModule
               - HandlerFunction
         -
            Label: GitHub
            Parameters:
               - GitHubOwner
               - GitHubRepo


Parameters:

   GitHubOwner:
      Type: String

   GitHubRepo:
      Type: String

   HandlerFunction:
      Description: Name of the API handler function to invoke; usually, the HTTP method in lowercase.
      Type: String

   HandlerModule:
      Description: Name of the glawit module that contains the API handler function to invoke.
      Type: String

   Layers:
      Description: ARNs of Lambda layers to add to the function's execution environment.
      Type: CommaDelimitedList

   Policies:
      Description: ARNs of IAM managed policies to attach to the function's role.
      Type: CommaDelimitedList

   PythonVersion:
      Description: Python version to use.
      Type: String
      Default: '3.8'


Resources:

   Function:
      Type: AWS::Lambda::Function
      Properties:
         Code:
            ZipFile:
               Fn::Sub: |
                  import glawit.interface.apigw
                  import glawit.main.api.${HandlerModule}

                  handler = glawit.interface.apigw.decorator(
                      glawit.api.${HandlerModule}.${HandlerFunction},
                  )
         Description: git LFS API handler
         Environment:
            Variables:
               GITHUB_OWNER:
                  Ref: GitHubOwner
               GITHUB_REPO:
                  Ref: GitHubRepo
         Handler: index.handler
         Layers:
            Ref: Layers
         MemorySize: 128
         Role:
            Fn::GetAtt:
               - FunctionRole
               - Arn
         Runtime:
            Fn::Sub: python${PythonVersion}
         Timeout: 5

   FunctionRole:
      Type: AWS::IAM::Role
      Properties:
         AssumeRolePolicyDocument:
            Version: 2012-10-17
            Statement:
               -
                  Principal:
                     Service:
                        - lambda.amazonaws.com
                  Action:
                     - sts:AssumeRole
                  Effect: Allow
         ManagedPolicyArns:
            Ref: Policies
         Policies:
            -
               # FIXME
               PolicyName: logs
               PolicyDocument:
                  Version: 2012-10-17
                  Statement:
                     -
                        Sid: FIXME # FIXME
                        Action:
                           - logs:CreateLogGroup
                           - logs:CreateLogStream
                           - logs:PutLogEvents
                        Resource:
                           - '*'
                           -
                              Fn::Sub: arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/*:*
                        Effect: Allow


Outputs:

   FunctionArn:
      Description: ARN of the Lambda function.
      Value:
         Fn::GetAtt:
            - Function
            - Arn

   FunctionName:
      Description: Name of the Lambda function.
      Value:
         Ref: Function
